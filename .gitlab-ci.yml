# The GitHub repository is mirrored to GitLab.com, where continuous builds
# are performed and can be downloaded.
#
# https://gitlab.com/Calinou/godot-builds-ci
#
# This build script is licensed under CC0 1.0 Universal:
# https://creativecommons.org/publicdomain/zero/1.0/

# Use only one stage for simplicity's sake
stages:
  - build

variables:
  # The build name to use instead of "custom_build"
  # This helps people identify where the build comes from
  BUILD_NAME: calinou
  # SCons build flags to use for all platforms
  SCONS_FLAGS: debug_symbols=no progress=no -j$(($(nproc) * 2))
  # The Godot Git repository clone URL
  GODOT_REPO_URL: https://github.com/godotengine/godot.git

before_script:
  - "$CI_PROJECT_DIR/scripts/gitlab-ci/before_script.sh"
  - cd "godot/"

after_script:
  - "$CI_PROJECT_DIR/scripts/gitlab-ci/after_script.sh"

# Build an editor and generate Mono glue
# This is run two hours before other jobs (so that the glue is available for
# all platforms afterwards)
generate:mono_glue:
  stage: build
  image: fedora:28
  only:
    variables:
      - $GENERATE_MONO_GLUE == "yes"
  script:
    - "$CI_PROJECT_DIR/scripts/gitlab-ci/generate/mono_glue.sh"
  artifacts:
    paths:
      - mono_glue.gen.cpp
    expire_in: 1 week

# Linux editor
# Built on Ubuntu 14.04 so that binaries run on old distributions as well
build:linux_editor:
  stage: build
  image: ubuntu:trusty
  except:
    variables:
      - $GENERATE_MONO_GLUE == "yes"
  script:
    - "$CI_PROJECT_DIR/scripts/gitlab-ci/build/linux_editor.sh"

# Linux export templates
# Built on Ubuntu 14.04 so that binaries run on old distributions as well
build:linux_templates:
  stage: build
  image: ubuntu:trusty
  except:
    variables:
      - $GENERATE_MONO_GLUE == "yes"
  script:
    - "$CI_PROJECT_DIR/scripts/gitlab-ci/build/linux_templates.sh"

# HTML5 (WebAssembly)
build:html5:
  stage: build
  image: fedora:28
  except:
    variables:
      - $GENERATE_MONO_GLUE == "yes"
  script:
    - "$CI_PROJECT_DIR/scripts/gitlab-ci/build/html5.sh"

# Android
build:android:
  stage: build
  image: fedora:28
  script:
    - "$CI_PROJECT_DIR/scripts/gitlab-ci/build/android.sh"

# Windows editor
build:windows_editor:
  stage: build
  image: fedora:28
  except:
    variables:
      - $GENERATE_MONO_GLUE == "yes"
  variables:
    # Use only 1 thread for building
    # (required to compile LTO-enabled builds successfully)
    SCONS_FLAGS: debug_symbols=no progress=no
  script:
    - "$CI_PROJECT_DIR/scripts/gitlab-ci/build/windows_editor.sh"

# Windows export templates
build:windows_templates:
  stage: build
  image: fedora:28
  except:
    variables:
      - $GENERATE_MONO_GLUE == "yes"
  variables:
    # Use only 1 thread for building
    # (required to compile LTO-enabled builds successfully)
    SCONS_FLAGS: debug_symbols=no progress=no
  script:
    - "$CI_PROJECT_DIR/scripts/gitlab-ci/build/windows_templates.sh"
